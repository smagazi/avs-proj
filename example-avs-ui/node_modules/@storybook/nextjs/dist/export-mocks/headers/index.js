"use strict";var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},__copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to},__reExport=(target,mod,secondTarget)=>(__copyProps(target,mod,"default"),secondTarget&&__copyProps(secondTarget,mod,"default")),__toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod)),__toCommonJS=mod=>__copyProps(__defProp({},"__esModule",{value:!0}),mod);var headers_exports={};__export(headers_exports,{cookies:()=>cookies,draftMode:()=>draftMode2,headers:()=>headers});module.exports=__toCommonJS(headers_exports);var import_test3=require("@storybook/test"),originalHeaders=__toESM(require("next/dist/client/components/headers"));__reExport(headers_exports,require("next/dist/client/components/headers"),module.exports);var import_test=require("@storybook/test"),import_headers=require("next/dist/server/web/spec-extension/adapters/headers"),HeadersAdapterMock=class extends import_headers.HeadersAdapter{constructor(){super({});this.append=(0,import_test.fn)(super.append.bind(this)).mockName("next/headers::headers().append");this.delete=(0,import_test.fn)(super.delete.bind(this)).mockName("next/headers::headers().delete");this.get=(0,import_test.fn)(super.get.bind(this)).mockName("next/headers::headers().get");this.has=(0,import_test.fn)(super.has.bind(this)).mockName("next/headers::headers().has");this.set=(0,import_test.fn)(super.set.bind(this)).mockName("next/headers::headers().set");this.forEach=(0,import_test.fn)(super.forEach.bind(this)).mockName("next/headers::headers().forEach");this.entries=(0,import_test.fn)(super.entries.bind(this)).mockName("next/headers::headers().entries");this.keys=(0,import_test.fn)(super.keys.bind(this)).mockName("next/headers::headers().keys");this.values=(0,import_test.fn)(super.values.bind(this)).mockName("next/headers::headers().values")}},headersAdapterMock,headers=()=>(headersAdapterMock||(headersAdapterMock=new HeadersAdapterMock),headersAdapterMock);headers.mockRestore=()=>{headersAdapterMock=new HeadersAdapterMock};var import_headers2=require("@storybook/nextjs/headers.mock"),import_test2=require("@storybook/test"),import_cookies=require("next/dist/compiled/@edge-runtime/cookies"),RequestCookiesMock=class extends import_cookies.RequestCookies{constructor(){super(...arguments);this.get=(0,import_test2.fn)(super.get.bind(this)).mockName("next/headers::cookies().get");this.getAll=(0,import_test2.fn)(super.getAll.bind(this)).mockName("next/headers::cookies().getAll");this.has=(0,import_test2.fn)(super.has.bind(this)).mockName("next/headers::cookies().has");this.set=(0,import_test2.fn)(super.set.bind(this)).mockName("next/headers::cookies().set");this.delete=(0,import_test2.fn)(super.delete.bind(this)).mockName("next/headers::cookies().delete")}},requestCookiesMock,cookies=(0,import_test2.fn)(()=>(requestCookiesMock||(requestCookiesMock=new RequestCookiesMock((0,import_headers2.headers)())),requestCookiesMock)).mockName("next/headers::cookies()"),originalRestore=cookies.mockRestore.bind(null);cookies.mockRestore=()=>{originalRestore(),import_headers2.headers.mockRestore(),requestCookiesMock=new RequestCookiesMock((0,import_headers2.headers)())};var draftMode2=(0,import_test3.fn)(originalHeaders.draftMode).mockName("draftMode");0&&(module.exports={cookies,draftMode,headers,...require("next/dist/client/components/headers")});

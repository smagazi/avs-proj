"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const _picasso = __importStar(require("./picasso"));
const _composablepolkadot = __importStar(require("./composablepolkadot"));
const _penumbra = __importStar(require("./penumbra"));
const _0l = __importStar(require("./0l"));
const _aptos = __importStar(require("./aptos"));
const _arbitrum = __importStar(require("./arbitrum"));
const _avail = __importStar(require("./avail"));
const _avalanche = __importStar(require("./avalanche"));
const _base = __importStar(require("./base"));
const _binancesmartchain = __importStar(require("./binancesmartchain"));
const _bitcoin = __importStar(require("./bitcoin"));
const _comex = __importStar(require("./comex"));
const _dogecoin = __importStar(require("./dogecoin"));
const _fantom = __importStar(require("./fantom"));
const _filecoin = __importStar(require("./filecoin"));
const _forex = __importStar(require("./forex"));
const _internetcomputer = __importStar(require("./internetcomputer"));
const _kusama = __importStar(require("./kusama"));
const _moonbeam = __importStar(require("./moonbeam"));
const _neo = __importStar(require("./neo"));
const _optimism = __importStar(require("./optimism"));
const _polkadot = __importStar(require("./polkadot"));
const _polygon = __importStar(require("./polygon"));
const _statemine = __importStar(require("./statemine"));
const _stellar = __importStar(require("./stellar"));
const _sui = __importStar(require("./sui"));
const _tinkernet = __importStar(require("./tinkernet"));
const _xrpl = __importStar(require("./xrpl"));
const _zilliqa = __importStar(require("./zilliqa"));
const _berachain = __importStar(require("./berachain"));
const _hall = __importStar(require("./hall"));
const _initia = __importStar(require("./initia"));
const _mantrachain = __importStar(require("./mantrachain"));
const _movement = __importStar(require("./movement"));
const _namada = __importStar(require("./namada"));
const _prysm = __importStar(require("./prysm"));
const _avalanchetestnet = __importStar(require("./avalanchetestnet"));
const _binancesmartchaintestnet = __importStar(require("./binancesmartchaintestnet"));
const _ethereumtestnet = __importStar(require("./ethereumtestnet"));
const _fantomtestnet = __importStar(require("./fantomtestnet"));
const _moonbeamtestnet = __importStar(require("./moonbeamtestnet"));
const _polkadottestnet = __importStar(require("./polkadottestnet"));
const _polygontestnet = __importStar(require("./polygontestnet"));
const _ojotestnet = __importStar(require("./ojotestnet"));
const assets = [
    _picasso.assets,
    _composablepolkadot.assets,
    _penumbra.assets,
    _0l.assets,
    _aptos.assets,
    _arbitrum.assets,
    _avail.assets,
    _avalanche.assets,
    _base.assets,
    _binancesmartchain.assets,
    _bitcoin.assets,
    _comex.assets,
    _dogecoin.assets,
    _fantom.assets,
    _filecoin.assets,
    _forex.assets,
    _internetcomputer.assets,
    _kusama.assets,
    _moonbeam.assets,
    _neo.assets,
    _optimism.assets,
    _polkadot.assets,
    _polygon.assets,
    _statemine.assets,
    _stellar.assets,
    _sui.assets,
    _tinkernet.assets,
    _xrpl.assets,
    _zilliqa.assets,
    _berachain.assets,
    _hall.assets,
    _initia.assets,
    _mantrachain.assets,
    _movement.assets,
    _namada.assets,
    _prysm.assets,
    _avalanchetestnet.assets,
    _binancesmartchaintestnet.assets,
    _ethereumtestnet.assets,
    _fantomtestnet.assets,
    _moonbeamtestnet.assets,
    _polkadottestnet.assets,
    _polygontestnet.assets,
    _ojotestnet.assets
];
exports.default = assets;
